; 
; Welcome to Racket v7.2.
; 
> 

>> 

>> 

>> 

>> 

>> 
responses.rkt> 

>> because

>> hi

>> what
Clint: ?
>> hi

i

>> 
>> 
>> hello clint
Clint: Greetings Traveller
>> how are you
Clint: when
>> ???
Clint: where
>> can you modal verbs
Clint: Yes I can!
>> excellent, i need this to work
Clint: Since when did you need that?
>> BYE
Clint: goodbye?
clint.rkt> 
responses.rkt> because-words
'("so " "so that" "because" " so ")
responses.rkt> (string-contains-or "because i am transgender" because-words)
"because"
responses.rkt> BUT WHY IS `THIS` HIGHLIGHT(if (string-contains-or "because i am" because-words))
; responses.rkt::183: if: bad syntax
;   in: (if (string-contains-or "because i am" because-words))
responses.rkt> (or (string-contains-or "because i am" because-words))
"because"(if (string-contains-or "because i am" because-words))
responses.rkt> (if (string? ((string-contains-or "because i am" because-words)) ))
; responses.rkt::293: if: bad syntax
;   in: (if (string? ((string-contains-or "because i am" because-words))))
responses.rkt> (if (string? (string-contains-or "because i am" because-words)))
; responses.rkt::361: if: bad syntax
;   in: (if (string? (string-contains-or "because i am" because-words)))
responses.rkt> (string? "o")
#t
responses.rkt> (or (string? (string-contains-or "because i am" because-words)))
#t
responses.rkt> ((string? (string-contains-or "because i am" because-words)))
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: #t
;   arguments...: [none]
responses.rkt> (string? (string-contains-or "because i am" because-words))
#t
responses.rkt> 

>> hi clint
Clint: What'S Up Dog?
>> i need to learn more racket
Clint: Since when did you need that?
>> since i started working on you!

>> 

>> hi

e

>> 
>> 
>> hi clint!
Clint: Howdy
>> whats up
Clint: what
>> nothing sorry

>> you should talk more
Clint: I should!
>> i need to learn more racket
Clint: Why do you need that?
>> because i am transgender

>> WHAT
Clint: who
>> so

e

>> 
>> 
>> since




e

>> 
>> 
>> 
>> 
>> 
>> 

>> because

>> 
e

>> 
>> because

>> so that

>> 

>> 

>> because

e
Clint: That's strange.
>> 
>> 
>> i need to learn more racket
Clint: Why do you need that?
>> because i am trans 
Clint: Oh really?
>> no actually, i am transphobic

>> i need to make clint not be truscum!!
Clint: Since when did you need that?
>> since right now.
Clint: Is that really so?
>> yes, that is really so 
Clint: That's strange.
>> this conversation is definitely coherant

>> clint, are you truscum?
Clint: ?
>> you should not be transphobic!!!
Clint: Yes I should!
>> 

>> goodbye
Clint: goodbye?
clint.rkt> 

>> hi

>> hi

iu

>> 
>> 
>> farewell

; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: "Clint: ~a!"
;   arguments...:
;    "bye"
; Context (plain; to see better errortrace context, re-run with C-u prefix):
;   /home/vic/climate-change-clint/clint.rkt:20:0 main-loop
;   /home/vic/climate-change-clint/clint.rkt:1:0 [running body]
> 

>> byeeeeeeeeeee

; error: format string requires 0 arguments, given 2; arguments were: 'string-titlecase! "Illegal substring START spec" "see you later" "Clint: ~a!"
; Context (plain; to see better errortrace context, re-run with C-u prefix):
;   /usr/share/racket/pkgs/srfi-lite-lib/srfi/13/string.rkt:977:0 s:string-titlecase
;   /home/vic/climate-change-clint/clint.rkt:20:0 main-loop
;   /home/vic/climate-change-clint/clint.rkt:1:0 [running body]
> 

>> byeeeeeeeeeee
Clint: bye!
clint.rkt> 

>> hi

>> hi





i

>> 
>> 
>> 
>> 
>> 
>> 
>> 
responses.rkt> (greeting-response)
Clint: what's up dog? (How is the weather today? How are you feeling about the climate today?)
responses.rkt> 
responses.rkt> (greeting-response)
Clint: hello Always opt for LED light bulbs
responses.rkt> 
responses.rkt> (greeting-response)
Clint: Hewwo There, Use a drink bottle rather than buying bottled water!
responses.rkt> (greeting-response)
Clint: Hello, Drive efficiently today: fast acceleration, high speeds and abrupt stops waste energy.
responses.rkt> 
responses.rkt> (greeting-response)
Clint: Hewwo There, how is the weather today?
responses.rkt> (greeting-response)
Clint:  Hi , how is the weather today?
responses.rkt> (greeting-response)
Clint: Greetings Traveller, use a drink bottle rather than buying bottled water!
responses.rkt> (greeting-response)
Clint: Greetings Traveller, how is the weather today?
responses.rkt> (greeting-response)
Clint: Hello, how is the weather today?
responses.rkt> e
; e: undefined;
;  cannot reference an identifier before its definition
;   in module: "/home/vic/climate-change-clint/responses.rkt"
responses.rkt> (define (f str))
; responses.rkt::1375: define: bad syntax (no expressions for procedure body)
;   in: (define (f str))
; Context (plain; to see better errortrace context, re-run with C-u prefix):
;   /usr/share/racket/collects/racket/private/norm-define.rkt:17:6 try-next
;   /usr/share/racket/collects/racket/private/norm-define.rkt:166:4 normalize-definition
;   /usr/share/racket/collects/racket/private/kw.rkt:1049:2 new-define
responses.rkt> 
responses.rkt> 
responses.rkt> dd

>> 
responses.rkt> 
responses.rkt> (f (choose greeting))
oooooooooo hello
responses.rkt> 

>> because
e
Clint: That's strange.
>> 
>> 